
create table geo_data.subdivide_test as (

select st_subdivide(geom) as geom

from geo_data.management_areas a

where a.id=1)

-- Code above takes a polygon geometry and subdivides into smaller regions
-- Very useful for speeding up spatial operations due to spatial indexing



create table geo_data.rast_clip as(

select st_union(st_clip(myraster.rast ,poly.geom,-9999,True))

from geo_data.sst_raster as myraster , geo_data.subdivide_test as poly

where st_intersects (myraster.rast, poly.geom))

--This code clips a raster by a polygon geometry based on intersecting geoms
-- Much faster using ST_Union on each individaul geom , than running in one go


	
create table geo_data.agg_grid as(

SELECT 
   poly.id , sum(point.ping) as sum_effort ,poly.geom from geo_data.random_points point , geo_data.vector_grid poly
 WHERE
     ST_Intersects(point.geom, poly.geom)
	 
group by poly.id)

-- Very useful code(equivalent to point to raster within ArcGIS) except this can run on millions of points within seconds
-- essentially it sums a field for all points within a dataset(i.e ping time) where it intersects with a polygon (i.e fishnet grid)


SELECT c.gid
FROM geo_data.vms c
WHERE EXISTS(SELECT c2.gid
FROM geo_data.vms2 c2
WHERE c2.gid = c.gid)

-- This code gets a unique vessel ids when present within both tables


